package me.gamrboy4life.paradox.module.render;

import java.util.ArrayList;

import de.Hero.settings.Setting;
import me.gamrboy4life.paradox.Paradox;
import me.gamrboy4life.paradox.module.Category;
import me.gamrboy4life.paradox.module.Module;
import net.minecraft.block.Block;

public class BedWarsXray extends Module {

    public static boolean enabled;
    private float oldGamma;
    public ArrayList<Block> xrayBlocks = new ArrayList<>();

    public BedWarsXray() {
        super("BedWarsXray", 0, Category.RENDER);
    }

    @Override
    public void setup() {
        Paradox.instance.settingsManager.rSetting(new Setting("Bed", this, false));
        Paradox.instance.settingsManager.rSetting(new Setting("Wool", this, false));
        Paradox.instance.settingsManager.rSetting(new Setting("Glass", this, false));
        Paradox.instance.settingsManager.rSetting(new Setting("Clay", this, false)); // Changed to Clay
        Paradox.instance.settingsManager.rSetting(new Setting("Ladder", this, false));
        Paradox.instance.settingsManager.rSetting(new Setting("Oak", this, false));
        Paradox.instance.settingsManager.rSetting(new Setting("Obsidian", this, false));
    }

    @Override
    public void onEnable() {
        BedWarsXray.enabled = true;
        this.oldGamma = mc.gameSettings.gammaSetting;
        mc.gameSettings.gammaSetting = 10.0f;
        mc.gameSettings.ambientOcclusion = 0;
        mc.renderGlobal.loadRenderers();
        updateXrayBlocks();
    }

    @Override
    public void onDisable() {
        BedWarsXray.enabled = false;
        mc.gameSettings.gammaSetting = this.oldGamma;
        mc.gameSettings.ambientOcclusion = 1;
        mc.renderGlobal.loadRenderers();
    }

    @Override
    public void onRender() {
        if (this.isToggled()) {
            updateXrayBlocks();
        }
    }

    private void updateXrayBlocks() {
        xrayBlocks.clear();
        if (Paradox.instance.settingsManager.getSettingByName("Bed").getValBoolean()) {
            xrayBlocks.add(Block.getBlockById(26)); // bed
        }
        if (Paradox.instance.settingsManager.getSettingByName("Wool").getValBoolean()) {
            xrayBlocks.add(Block.getBlockById(35)); // wool
        }
        if (Paradox.instance.settingsManager.getSettingByName("Glass").getValBoolean()) {
            xrayBlocks.add(Block.getBlockById(95)); // glass
        }
        if (Paradox.instance.settingsManager.getSettingByName("Clay").getValBoolean()) { // Changed to Clay
            xrayBlocks.add(Block.getBlockById(82)); // clay
        }
        if (Paradox.instance.settingsManager.getSettingByName("Ladder").getValBoolean()) {
            xrayBlocks.add(Block.getBlockById(65)); // ladder
        }
        if (Paradox.instance.settingsManager.getSettingByName("Oak").getValBoolean()) {
            xrayBlocks.add(Block.getBlockById(5)); // oak
        }
        if (Paradox.instance.settingsManager.getSettingByName("Obsidian").getValBoolean()) {
            xrayBlocks.add(Block.getBlockById(49)); // obsidian
        }
    }

    public boolean shouldXrayBlock(Block block) {
        return this.xrayBlocks.contains(block);
    }
}